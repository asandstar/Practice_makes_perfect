//;IO分配
//	DL EQU P1.0	;列输入
//	DH EQU P1.1	;行输入
//	CLK EQU P1.2 ;移位寄存器时钟	SRCLK
//	STR EQU P1.3 ;锁存器时钟		RCLK
//	OE EQU P1.4 ;输出使能
//	
//	DOWN EQU P2.0
//	UP EQU P2.1
//	RIGHT EQU P2.2
//	LEFT EQU P2.3
//
//;store
//
//	DATA1 EQU 40H
//	DATA2 EQU 41H
//	ADDR EQU 42H
//	TEMP1 EQU 43H
//	TEMP2 EQU 44H
//	COUNT EQU 45H
//	FLAG BIT 20H.0
//	TEMPC BIT 20H.1
//
//	ORG 0000H
//	LJMP MAIN
//
//	ORG 000BH
//	LJMP TIME0_ISR
//
//	ORG 0100H
//
//MAIN:
//	MOV DPTR,#WORDTAB
//	MOV SP, #5AH
//	MOV R0,#30H
//	MOV R1,#0
//	MOV R2,#20H
//
//RAM:
//	MOV A,R1
//	MOVC A,@A+DPTR
//	MOV @R0,A
//	INC R0
//	INC R1
//	DJNZ R2, RAM
//
//LOOP:
//	LCALL DISPLAY
//	SJMP LOOP
//
//ORG 0200H
//DISPLAY:
//	MOV ADDR,#30H
//	MOV A,#01H
//	MOV R4,#8
//LOOPD1:
//	MOV DATA1,A
//	RL A
//	MOV DATA2,#00H
//	MOV R0,#DATA1
//	MOV R1,ADDR
//	LCALL HC595
//	LCALL DELAY1MS
//	MOV ADDR,R1
//
//	DJNZ R4,LOOPD1
//	MOV A,#01H
//	MOV R4,#8
//
//LOOPD2:
//	MOV DATA2,A
//	RL A
//	MOV DATA1,#00H
//	MOV R0,#DATA1
//	MOV R1,ADDR
//	LCALL HC595
//	LCALL DELAY1MS
//	MOV ADDR,R1
//	DJNZ R4,LOOPD2
//	RET
//
//HC595:
//	PUSH ACC
//	MOV R3,#2
//	CLR OE
//
//REFRESH:
//	MOV R2,#8
//	MOV TEMP1,@R0
//	MOV TEMP2,@R1
//	CLR STR
//
//SHIFT:
//	MOV A,TEMP1
//	CLR CLK
//	RRC A
//	MOV DL,C
//	MOV TEMP1,A
//	MOV A,TEMP2
//	RRC A
//	MOV DH,C
//	MOV TEMP2,A
//
//	SETB CLK
//	DJNZ R2,SHIFT
//	INC R0
//	INC R1
//	DJNZ R3,REFRESH
//	SETB STR
//	NOP
//	NOP
//	NOP
//	CLR STR
//	POP ACC
//	RET
//
//DELAY1MS:			;@11.0592MHz
//	PUSH	30H
//	PUSH	31H
//	MOV		30H,#9
//	MOV		31H,#150
//NEXT:
//	DJNZ	31H,NEXT
//	DJNZ	30H,NEXT
//	POP		31H
//	POP		30H
//	RET
//
//ORG 1000H
//WORDTAB: //低有效
//	DB 0FBH ,0BFH ,0FBH ,0BFH ,000H ,001H ,0FBH ,0BFH ,0FFH ,0DFH ,0F7H ,0DFH ,0F7H ,0DFH ,0FBH ,0BFH;
//	DB 0FBH ,0BFH ,0FDH ,07FH ,0FEH ,0FFH ,0FDH ,07FH ,0FBH ,0BFH ,0F7H ,0DFH ,0CFH ,0E7H ,03FH ,0F9H;"艾",0
//	
//END